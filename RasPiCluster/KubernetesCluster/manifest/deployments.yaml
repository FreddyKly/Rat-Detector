apiVersion: v1
kind: Namespace
metadata:
  name: work-space
  labels:
    app: work-space
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: work-space
  labels:
    app: nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
        name: nfs-server
    spec:
      containers:
      - name: nfs-server
        image: itsthenetwork/nfs-server-alpine:11-arm
        imagePullPolicy: IfNotPresent
        env:
          - name: SHARED_DIRECTORY
            value: /exports
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /exports
            name: mypvc
      volumes:
        - name: mypvc
          persistentVolumeClaim:
            claimName: local-claim
      nodeSelector:
        SSD: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: work-space
  labels:
    app: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
      tier: mariadb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mariadb
        tier: mariadb
    spec:
      containers:
        - image: tobi312/rpi-mariadb:10.3
          imagePullPolicy: IfNotPresent
          name: mariadb
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-pass
                  key: password
          ports:
            - containerPort: 3306
              name: mariadb
          volumeMounts:
            - name: mariadb-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mariadb-persistent-storage
          nfs:
            server: 10.43.184.231
            path: / 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-server
  namespace: work-space
  labels:
    name: webapp-server
spec:
  replicas: 1
  selector:
    matchLabels:
      name: webapp-server
  template:
    metadata:
      labels:
        name: webapp-server
    spec:
      containers:
        - name: webapp-server
          image: kaiser0815/webapp-server:v4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-client
  namespace: work-space
  labels:
    name: webapp-client
spec:
  replicas: 1
  selector:
    matchLabels:
      name: webapp-client
  template:
    metadata:
      labels:
        name: webapp-client
    spec:
      containers:
        - name: webapp-client
          image: kaiser0815/webapp-client:v4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP